<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>test</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>


  <name>test</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <surefire.version>2.22.2</surefire.version>
      <assured.version>5.3.0</assured.version>
      <jackson.version>2.15.0</jackson.version>
      <sql.version>3.42.0.0</sql.version>
      <hibernate-version>5.0.1.Final</hibernate-version>
      <flyway.version>8.5.13</flyway.version>
      <wiremock.version>1.58</wiremock.version>
      <mockito.version>5.3.1</mockito.version>
      <logback.version>1.4.12</logback.version>
      <slf4j.version>2.0.4</slf4j.version>
      <allure.junit.version>2.22.1</allure.junit.version>
      <aspectj.version>1.8.10</aspectj.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.11.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.11.0</version>
      <scope>test</scope>
    </dependency>
      <dependency>
          <groupId>io.rest-assured</groupId>
          <artifactId>rest-assured</artifactId>
          <version>${assured.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
          <version>${jackson.version}</version>
      </dependency>
      <dependency>
          <groupId>org.xerial</groupId>
          <artifactId>sqlite-jdbc</artifactId>
          <version>${sql.version}</version>
      </dependency>
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-core</artifactId>
          <version>${hibernate-version}</version>
      </dependency>

      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-entitymanager</artifactId>
          <version>${hibernate-version}</version>
      </dependency>
      <dependency>
          <groupId>com.zsoltfabok</groupId>
          <artifactId>sqlite-dialect</artifactId>
          <version>1.0</version>
      </dependency>
      <dependency>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-core</artifactId>
          <version>${mockito.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.mockito</groupId>
          <artifactId>mockito-junit-jupiter</artifactId>
          <version>${mockito.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>com.github.tomakehurst</groupId>
          <artifactId>wiremock</artifactId>
          <version>${wiremock.version}</version>
          <!--          <scope>test</scope>-->
      </dependency>
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
          <version>${logback.version}</version>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>${slf4j.version}</version>
      </dependency>
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>${logback.version}</version>
      </dependency>
      <dependency>
          <groupId>io.qameta.allure</groupId>
          <artifactId>allure-junit5</artifactId>
          <version>${allure.junit.version}</version>
      </dependency>
  </dependencies>

    <build>
        <plugins>
            <!-- Plugin для компиляции исходных кодов -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>17</source>
                    <target>17</target>
                </configuration>
            </plugin>
            <!-- Plugin для запуска тестовых классов - т.е. запуск тестов -->

<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-surefire-plugin</artifactId>-->
<!--                <version>${surefire.version}</version>-->
<!--            </plugin>-->

            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
                <configuration>
                    <testFailureIgnore>false</testFailureIgnore>
                    <argLine>
                        -javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"
                    </argLine>
                    <systemProperties>
                        <property>
                            <name>junit.jupiter.extensions.autodetection.enabled</name>
                            <value>true</value>
                        </property>
                    </systemProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.platform</groupId>
                        <artifactId>junit-platform-surefire-provider</artifactId>
                        <version>1.2.0</version>
                    </dependency>
                    <dependency>
                        <groupId>org.aspectj</groupId>
                        <artifactId>aspectjweaver</artifactId>
                        <version>${aspectj.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>${flyway.version}</version>
<!--                <configuration>-->
<!--                    <baselineOnMigrate>true</baselineOnMigrate>-->
<!--                    <url>jdbc:sqlite:demo.db</url>-->
<!--                    <locations>filesystem:db/seminar/migration</locations>-->
<!--                </configuration>-->
                <configuration>
                    <baselineOnMigrate>true</baselineOnMigrate>
                    <url>jdbc:sqlite:home.db</url>
                    <locations>filesystem:db/home/migration</locations>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.qameta.allure</groupId>
                <artifactId>allure-maven</artifactId>
                <version>2.12.0</version>
                <configuration>
                    <!-- На момент написания лекции соответствующий архив не доступен,
                    закомментируйте строку-->
                    <!--<reportVersion>2.4.1</reportVersion>-->
                    <!-- Добавим адрес директории для генератора отчета -->
                    <buildDirectory>C:\WORK\java-test-base\maven-base</buildDirectory>
                </configuration>
            </plugin>
        </plugins>

    </build>
  <!-- Репозитории -->
  <repositories>
    <repository>
      <id>repository</id>
      <url>https://mvnrepository.com/</url>
    </repository>
  </repositories>



</project>
